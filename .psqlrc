-- Don't display the "helpful" message on startup.
\set QUIET 1

\set PROMPT1 '%n@%M:%> %`date +%H:%M:%S` [%/] %R%x%# '
\set PROMPT2 '%n@%M:%> %`date +%H:%M:%S` [%/] %R%x%# '
\set PROMPT3 '%n@%M:%> %`date +%H:%M:%S` [%/] %R%x%# '

\pset null '<NULL>'
\set ON_ERROR_ROLLBACK interactive
\set HISTCONTROL ignoredups
\timing
\set COMP_KEYWORD_CASE upper
\set VERBOSITY verbose

-- do not need ";" at the end of a line
-- but can't copy/paste queries
-- \set SINGLELINE 1

\unset QUIET

\echo ''
\echo '\t:version\t-- Show PostgreSQL version.'
\echo '\t:extensions\t-- List available extensions.'
\echo '\t:activity\t-- List running queries.'
\echo '\t:connections\t-- List open connections.'
\echo '\t:settings\t-- List runtime configuration.'
\echo '\t:locks\t\t-- Lock info.'
\echo '\t:uptime\t\t-- Server uptime.'
\echo '\t:waits\t\t-- Waiting queries.'
\echo '\t:dbsize\t\t-- Database disk usage.'
\echo '\t:tablesize\t-- Table disk usage.'
\echo '\t:sizes\t-- Table and index disk usage.'
\echo '\t:all\t-- "SELECT * FROM".'
\echo ''

\set version 'SELECT version();'
\set extensions 'select * from pg_available_extensions;'
\set activity 'select * from pg_stat_activity;'
\set connections 'select usename, count(*) from pg_stat_activity group by usename;'
\set settings 'select name, setting,unit,context from pg_settings;'
\set locks  'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'
\set uptime 'select now() - pg_postmaster_start_time() AS uptime;'
\set waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, now() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting = true;'
\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'
\set tablesize 'SELECT nspname, relname AS \"relation\", pg_size_pretty(pg_relation_size(C.oid)) AS "size" FROM pg_class C LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace) WHERE nspname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size(C.oid) DESC LIMIT 40;'
\set sizes 'select table_schema as table_schema, table_name as table_name, pg_size_pretty(pg_total_relation_size(table_schema||\'.\'||table_name)) as total_size_pretty, pg_size_pretty(pg_relation_size(table_schema||\'.\'||table_name)) as table_size_pretty, pg_size_pretty(pg_total_relation_size(table_schema||\'.\'||table_name) - pg_relation_size(table_schema||\'.\'||table_name)) as index_size_pretty, case when pg_relation_size(table_schema||\'.\'||table_name) <> 0 then round( (pg_total_relation_size(table_schema||\'.\'||table_name) - pg_relation_size(table_schema||\'.\'||table_name))::numeric / pg_relation_size(table_schema||\'.\'||table_name)::numeric , 3) else null end as index_over_table_ratio, case when (pg_total_relation_size(table_schema||\'.\'||table_name) - pg_relation_size(table_schema||\'.\'||table_name)) <> 0 then round( pg_relation_size(table_schema||\'.\'||table_name)::numeric / (pg_total_relation_size(table_schema||\'.\'||table_name) - pg_relation_size(table_schema||\'.\'||table_name))::numeric , 3) else null end as table_over_index_ratio, pg_total_relation_size(table_schema||\'.\'||table_name) as total_size, pg_relation_size(table_schema||\'.\'||table_name) as table_size, (pg_total_relation_size(table_schema||\'.\'||table_name) - pg_relation_size(table_schema||\'.\'||table_name)) as index_size from information_schema.tables where table_schema <> \'pg_catalog\' and table_schema <> \'information_schema\' order by index_size desc;'

